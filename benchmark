#!/usr/bin/env python3 #-m cProfile -s tottime

#
# Benchmarks generation of all equations for given size. This can be used to
# measure progress in optimizing the generation and limiting collisions.
#

import math # https://docs.python.org/3/library/math.html
import sys
import time

from equation import generate, stringify

if __name__ == '__main__':
    last = 1
    for size in range(1, 10):
        start = time.process_time()
        count = sum(1 for _ in generate(size))
        span = time.process_time() - start
        seconds = span / count
        growth = count / last
        last = count
        avg = math.pow(count, 1.0 / size)
        print(f'size: {size} growth: {growth:.2f}x avg: {avg:.2f} nanos: {(seconds * 1e9):.0f} count: {(count / 1e6):.2f}M secs: {span:.2f}')

# size: 1 growth: 6.00x avg: 6.00 nanos: 1667 count: 0.00M secs: 0.00
# size: 2 growth: 2.00x avg: 3.46 nanos: 2083 count: 0.00M secs: 0.00
# size: 3 growth: 9.17x avg: 4.79 nanos: 1109 count: 0.00M secs: 0.00
# size: 4 growth: 4.34x avg: 4.67 nanos: 1239 count: 0.00M secs: 0.00
# size: 5 growth: 8.14x avg: 5.22 nanos: 1198 count: 0.00M secs: 0.00
# size: 6 growth: 6.05x avg: 5.35 nanos: 1332 count: 0.02M secs: 0.03
# size: 7 growth: 7.77x avg: 5.64 nanos: 1281 count: 0.18M secs: 0.23
# size: 8 growth: 6.98x avg: 5.80 nanos: 1309 count: 1.27M secs: 1.67
# size: 9 growth: 7.68x avg: 5.98 nanos: 1306 count: 9.78M secs: 12.78
