#!/usr/bin/env python3 #-m cProfile -s tottime

#
# Benchmarks generation of all equations for given size. This can be used to
# measure progress in optimizing the generation and limiting collisions.
#

import math # https://docs.python.org/3/library/math.html
import sys
import time

from equation import generate, stringify

if __name__ == '__main__':
    last = 1
    for size in range(1, 10):
        start = time.process_time()
        count = sum(1 for _ in generate(size))
        span = time.process_time() - start
        seconds = span / count
        growth = count / last
        last = count
        avg = math.pow(count, 1.0 / size)
        print(f'size: {size} growth: {growth:.2f}x avg: {avg:.2f} nanos: {(seconds * 1e9):.0f} count: {(count / 1e6):.2f}M secs: {span:.2f}')

# size: 1 growth: 6.00x avg: 6.00 nanos: 2667 count: 0.00M secs: 0.00
# size: 2 growth: 2.17x avg: 3.61 nanos: 2000 count: 0.00M secs: 0.00
# size: 3 growth: 9.23x avg: 4.93 nanos: 1300 count: 0.00M secs: 0.00
# size: 4 growth: 4.76x avg: 4.89 nanos: 1403 count: 0.00M secs: 0.00
# size: 5 growth: 8.33x avg: 5.44 nanos: 997 count: 0.00M secs: 0.00
# size: 6 growth: 6.56x avg: 5.61 nanos: 1023 count: 0.03M secs: 0.03
# size: 7 growth: 7.95x avg: 5.90 nanos: 1093 count: 0.25M secs: 0.27
# size: 8 growth: 7.44x avg: 6.07 nanos: 1079 count: 1.85M secs: 1.99
# size: 9 growth: 7.98x avg: 6.26 nanos: 1087 count: 14.72M secs: 16.00
