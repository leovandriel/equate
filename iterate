#!/usr/bin/env python3 #-m cProfile -s tottime

#
# Finds an equation given a target number by iterating through all possible
# equations and returning close approximations.
#

import math # https://docs.python.org/3/library/math.html
import sys

from equation import generate, stringify

if __name__ == '__main__':
    max_size = 9
    min_diff = 1e-12
    add_real = True
    target = float(sys.argv[1]) if len(sys.argv) > 1 else 1.618033988749895 # golden ratio

    total_count = 0
    last_count = 1
    est_count = 1
    for size in range(1, max_size + 1):
        current_count = 0
        for eq, sim, _, _ in generate(size, add_real = add_real):
            value = sim[0]
            current_count += 1
            if abs(value - target) < min_diff:
                diff = round(-math.log10(abs(value - target)), 1) if value != target else 16
                print(f'\r{stringify(eq)} = {value} (diff: {diff})')
            if current_count % 1000000 == 0:
                print(f'\riterations: {round((total_count + current_count) / 1e6)}M size: {size} progress: {round(100 * current_count / est_count, 2)}% ', end='', file=sys.stderr)
        total_count += current_count
        est_count = current_count * current_count / last_count
        last_count = current_count
