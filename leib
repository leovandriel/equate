#!/usr/bin/env python3 #-m cProfile -s tottime

#
# Run Leibniz formula, see how it converges.
#

import math
import time

def run(step, target):
    value = 0.0
    sign = 1
    denom = 1
    batch = 1
    start = time.process_time()
    while True:
        batch *= 2
        while denom < batch:
            value += sign / denom
            sign *= -1
            denom += step
        index = (batch - 1) / step
        digits = -math.log10(abs(target - value))
        seconds = time.process_time() - start
        nanos = seconds / index * 1e9
        print(f'index: {index:.0f} value: {value} digits: {digits:.1f} seconds: {seconds:.1f} nanos:{nanos:.0f}')

if __name__ == '__main__':
    # run(1, math.log(2))
    run(2, math.pi / 4)
    # run(3, (math.log(2) + math.pi / math.sqrt(3)) / 3)
    # run(4, (math.log(1 + math.sqrt(2)) + math.pi / 2) / (2 * math.sqrt(2)))
    # run(5, 0.888313572651788638040755227020379346278110830)
